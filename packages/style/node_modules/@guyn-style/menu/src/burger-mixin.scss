// The mixin
@mixin menu(
	$width: 1.5rem,
	$height: rem(2),
	$gutter: rem(5),
	$color: white,
	$round: 0,
	$transition-duration: 0.3s
) {
	$mixed: true !global;

	// $width number check: Dirty fix, because apparently vw's are not numbers.
	@if type-of($width) == "number" {
		@if unit($width) == "px" {
			$width: rem($width);
		}
		@if unit($height) == "px" {
			$height: rem($height);
		}
		@if unit($gutter) == "px" {
			$gutter: rem($gutter);
		}
		@if unit($gutter) == unit($height) == unit($width) {
			$mixed: false;
		}
	} @else {
		$mixed: false;
	}

	$margin: calc(#{$height} + #{$gutter});
	$margin-left: calc(#{$width} / 2);
	$margin-top: calc(#{$height} / 2 * -1);
	$top: calc(#{$height} + #{$gutter});

	// Set margins
	@if $mixed == false {
		$margin: $height + $gutter;
		$margin-left: $width / 2;
		$margin-top: -#{$height / 2};
		$top: #{($height + $gutter)};
	}

	// set global Variables
	$menu-height: $height !global;
	$menu-gutter: $gutter !global;
	$menu-color: $color !global;
	$menu-margin: $margin !global;
	$menu-margin-left: $margin-left !global;
	$menu-margin-top: $margin-top !global;
	$menu-top: $top !global;

	position: absolute;
	top: 50%;
	left: 50%;
	text-indent: -999em;
	transform: translateY(-#{$menu-height});
	cursor: pointer;

	// The code for the span
	user-select: none;
	@if $mixed {
		margin: #{$margin-top} auto #{$margin} calc(#{$margin-left} * -1);
	} @else {
		margin: #{$margin-top} auto #{$margin} #{$margin-left * -1};
	}

	// Set styles to bars
	&,
	&::before,
	&::after {
		display: block;
		width: $width;
		height: $height;
		background-color: $color;
		opacity: 1;
		transition: $transition-duration;
		@if $round != 0 {
			border-radius: $round;
		}
	}
	// Bottom and top bar
	&::before,
	&::after {
		content: "";
		position: absolute;
	}

	// Top bar
	&::before {
		@if $mixed {
			top: calc(#{$top} * -1);
		} @else {
			top: #{$top * -1};
		}
	}

	// Bottom bar
	&::after {
		top: #{$top};
	}
}

@mixin menu-close {
	&::before,
	&::after {
		top: 0px;
		@if $mixed {
			margin-top: calc(
				(#{$menu-height} / 2) + (#{$menu-gutter} + #{$menu-height}) * -1
			);
		} @else {
			margin-top: -#{($menu-height/2) + (#{$menu-gutter + $menu-height})};
		}
		@content;
	}
	& {
		background-color: transparent;

		@if $mixed {
			transform: translateY(calc((#{$menu-height} * -1) / 2));
		} @else {
			transform: translateY(-#{$menu-height / 2});
		}
	}
	&::before {
		@if $mixed {
			transform: translateY(calc(#{$menu-gutter} + #{$menu-height}))
				rotate(45deg);
		} @else {
			transform: translateY($menu-gutter + $menu-height) rotate(45deg);
		}
	}
	&::after {
		@if $mixed {
			transform: translateY(calc(#{$menu-gutter} + #{$menu-height}))
				rotate(-45deg);
		} @else {
			transform: translateY($menu-gutter + $menu-height) rotate(-45deg);
		}
	}
}
@mixin menu-reset {
	&::before,
	&::after {
		margin-top: 0;
		@content;
	}
	& {
		background-color: $menu-color;
	}
	&::before {
		top: #{$menu-top * -1};
		transform: translateY(0) rotate(0deg);
	}
	&::after {
		top: #{$menu-top};
		transform: translateY(0) rotate(0deg);
	}
}
@mixin menu-body {
	&,
	&::before,
	&::after {
		@content;
	}
}
@mixin menu-body-first {
	&::before {
		@content;
	}
}
@mixin menu-body-middle {
	& {
		@content;
	}
}
@mixin menu-body-last {
	&::after {
		@content;
	}
}

@mixin menu-body-close {
	&::before,
	&::after {
		@content;
	}
}
