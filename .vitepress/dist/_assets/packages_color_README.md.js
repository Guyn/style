import{q as n,p as s,s as a}from"./runtime-core.esm-bundler-9a3744ec.js";const t='{"title":"Color","frontmatter":{},"headers":[{"level":2,"title":"The philosophy","slug":"the-philosophy"},{"level":2,"title":"The function","slug":"the-function"},{"level":2,"title":"Add your own","slug":"add-your-own"},{"level":2,"title":"Overwrite","slug":"overwrite"},{"level":2,"title":"SCSS color function","slug":"scss-color-function"},{"level":2,"title":"Default color variables","slug":"default-color-variables"},{"level":3,"title":"Default colorsets","slug":"default-colorsets"},{"level":2,"title":"Default colorset","slug":"default-colorset"},{"level":2,"title":"Contra","slug":"contra"},{"level":3,"title":"The function","slug":"the-function-2"},{"level":3,"title":"\\\\$colors","slug":"colors"}],"lastUpdated":1588601293749.669}';var o={};const e=a('<div class="vitepress-content"><h1 id="color"><a class="header-anchor" href="#color">#</a> Color</h1><h2 id="the-philosophy"><a class="header-anchor" href="#the-philosophy">#</a> The philosophy</h2><p>Guyn comes with two <a href="#default-colorsets">predefined colorsets</a>; <code>default</code> and <code>social</code>. All colors are easy to change, extend, or overwrite with another colorset. Normally colors are defined as variables in SCSS, we decided that a color function is much more powerful.</p><h2 id="the-function"><a class="header-anchor" href="#the-function">#</a> The function</h2><p>The basic function to show a color is <code>color(Red)</code>, but in Guyn it&#39;s also possible to use it to define the opacity or use another colorset.</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token comment">// Standard function:</span>\n<span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">color</span><span class="token punctuation">(</span>Red<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// outputs: background-color: #eb0f33;</span>\n\n<span class="token comment">// Using the opacity property:</span>\n<span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">color</span><span class="token punctuation">(</span>\n\tRed<span class="token punctuation">,</span>\n\t0.5\n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// outputs: background-color: rgba(235, 15, 51, 0.5);</span>\n\n<span class="token comment">// Using a different colorset:</span>\n<span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">color</span><span class="token punctuation">(</span>\n\tRed<span class="token punctuation">,</span>\n\t1<span class="token punctuation">,</span>\n\t<span class="token string">&quot;vibrant&quot;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// outputs: background-color: #fe5165;</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h2 id="add-your-own"><a class="header-anchor" href="#add-your-own">#</a> Add your own</h2><p>Add your own colorset by passing a map. Colors should not have the same name as existing <a href="https://www.w3schools.com/colors/colors_names.asp" target="_blank" rel="noopener noreferrer">html color names</a>, you can only use them if you capitalize them.</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token comment">// To create a new colorset and overwrite the default at the same time:</span>\n<span class="token property"><span class="token variable">$default-color-set</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n\t<span class="token string">&quot;Black&quot;</span><span class="token punctuation">:</span> #111111<span class="token punctuation">,</span>\n\t<span class="token string">&quot;White&quot;</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">,</span>\n\t<span class="token string">&quot;myBlue&quot;</span><span class="token punctuation">:</span> #181160<span class="token punctuation">,</span>\n\t<span class="token string">&quot;fireRed&quot;</span><span class="token punctuation">:</span> #ed1f35<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// NB The new default colorset has to at least contain Black and White.</span>\n\n<span class="token comment">// Choose a unique variable name to create a new colorset:</span>\n<span class="token property"><span class="token variable">$custom-colors</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n\t<span class="token string">&quot;Black&quot;</span><span class="token punctuation">:</span> #111111<span class="token punctuation">,</span>\n\t<span class="token string">&quot;White&quot;</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">,</span>\n\t<span class="token string">&quot;myBlue&quot;</span><span class="token punctuation">:</span> #181160<span class="token punctuation">,</span>\n\t<span class="token string">&quot;fireRed&quot;</span><span class="token punctuation">:</span> #ed1f35<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h2 id="overwrite"><a class="header-anchor" href="#overwrite">#</a> Overwrite</h2><p>To overwrite the default colorset and add your own:</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token property"><span class="token variable">$default-color-set</span></span><span class="token punctuation">:</span> <span class="token string">&quot;vibrant&quot;</span><span class="token punctuation">;</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Include this before the import of <code>@import &#39;~henris&#39;</code></p></div><h2 id="scss-color-function"><a class="header-anchor" href="#scss-color-function">#</a> SCSS color function</h2><p>The colors from the colorsets are all usable in the standard <a href="http://sass-lang.com/documentation/Sass/Script/Functions.html" target="_blank" rel="noopener noreferrer">SCSS color functions</a>:</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token comment">// syntax:</span>\n<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span>colorName<span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// example</span>\n<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">darken</span><span class="token punctuation">(</span>fireRed<span class="token punctuation">,</span> 10%<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h2 id="default-color-variables"><a class="header-anchor" href="#default-color-variables">#</a> Default color variables</h2><table><thead><tr><th>Variable</th><th>Default value</th><th>Use</th></tr></thead><tbody><tr><td><code>$color-dark</code></td><td><code>color(Black)</code></td><td>Mainly used for text colors and backgrounds</td></tr><tr><td><code>$color-light</code></td><td><code>color(White)</code></td><td>Mainly used for text colors and backgrounds</td></tr><tr><td><code>$color-primary</code>/ <code>$primary-color</code></td><td><code>color(Purple)</code></td><td>The main color in your project, f.e. your brand color</td></tr><tr><td><code>$color-secondary</code>/ <code>$secondary-color</code></td><td><code>color(Blue)</code></td><td>The complementary color in your project</td></tr><tr><td><code>$color-tertiary</code>/ <code>$tertiary-color</code></td><td><code>color(Pink)</code></td><td>An extra complementary color in your project</td></tr><tr><td><code>$color-link</code></td><td><code>color(Blue)</code></td><td>Links</td></tr><tr><td><code>$color-info</code></td><td><code>color(Turquoise)</code></td><td>Information blocks or texts</td></tr><tr><td><code>$color-success</code></td><td><code>color(Green)</code></td><td>Success messages</td></tr><tr><td><code>$color-warning</code></td><td><code>color(Orange)</code></td><td>Warning messages</td></tr><tr><td><code>$color-danger</code></td><td><code>color(Red)</code></td><td>Danger / error messages</td></tr></tbody></table><h3 id="default-colorsets"><a class="header-anchor" href="#default-colorsets">#</a> Default colorsets</h3>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token property"><span class="token variable">$color-default</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n\t<span class="token string">&quot;Black&quot;</span><span class="token punctuation">:</span> #101010<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Dark&quot;</span><span class="token punctuation">:</span> #303030<span class="token punctuation">,</span>\n\t<span class="token string">&quot;White&quot;</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Offwhite&quot;</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Gray&quot;</span><span class="token punctuation">:</span> #7f7f7f<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Green&quot;</span><span class="token punctuation">:</span> #10c565<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Blue&quot;</span><span class="token punctuation">:</span> #1eb3e0<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Red&quot;</span><span class="token punctuation">:</span> #eb0f33<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Brown&quot;</span><span class="token punctuation">:</span> #aa834f<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Yellow&quot;</span><span class="token punctuation">:</span> #f5c505<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Orange&quot;</span><span class="token punctuation">:</span> #f6790b<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Pink&quot;</span><span class="token punctuation">:</span> #ca1387<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Purple&quot;</span><span class="token punctuation">:</span> #7329b1<span class="token punctuation">,</span>\n\t<span class="token string">&quot;Turquoise&quot;</span><span class="token punctuation">:</span> #3feac3<span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span> <span class="token comment">//</span>\n\n<span class="token property"><span class="token variable">$color-social</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>\n\t<span class="token string">&quot;dribbble&quot;</span><span class="token punctuation">:</span> #ea4c89<span class="token punctuation">,</span>\n\t<span class="token string">&quot;facebook&quot;</span><span class="token punctuation">:</span> #3b5998<span class="token punctuation">,</span>\n\t<span class="token string">&quot;flickr&quot;</span><span class="token punctuation">:</span> #ff0084<span class="token punctuation">,</span>\n\t<span class="token string">&quot;foursquare&quot;</span><span class="token punctuation">:</span> #0072b1<span class="token punctuation">,</span>\n\t<span class="token string">&quot;git&quot;</span><span class="token punctuation">:</span> #0f0d0e<span class="token punctuation">,</span>\n\t<span class="token string">&quot;googleplus&quot;</span><span class="token punctuation">:</span> #dd4b39<span class="token punctuation">,</span>\n\t<span class="token string">&quot;twitter&quot;</span><span class="token punctuation">:</span> #00aced<span class="token punctuation">,</span>\n\t<span class="token string">&quot;linkedin&quot;</span><span class="token punctuation">:</span> #007bb6<span class="token punctuation">,</span>\n\t<span class="token string">&quot;instagram&quot;</span><span class="token punctuation">:</span> #517fa4<span class="token punctuation">,</span>\n\t<span class="token string">&quot;pinterest&quot;</span><span class="token punctuation">:</span> #cb2027<span class="token punctuation">,</span>\n\t<span class="token string">&quot;skype&quot;</span><span class="token punctuation">:</span> #12a5f4<span class="token punctuation">,</span>\n\t<span class="token string">&quot;snapchat&quot;</span><span class="token punctuation">:</span> #fffc00<span class="token punctuation">,</span>\n\t<span class="token string">&quot;soundcloud&quot;</span><span class="token punctuation">:</span> #ff7700<span class="token punctuation">,</span>\n\t<span class="token string">&quot;spotify&quot;</span><span class="token punctuation">:</span> #2ebd59<span class="token punctuation">,</span>\n\t<span class="token string">&quot;tumblr&quot;</span><span class="token punctuation">:</span> #32506d<span class="token punctuation">,</span>\n\t<span class="token string">&quot;vimeo&quot;</span><span class="token punctuation">:</span> #aad450<span class="token punctuation">,</span>\n\t<span class="token string">&quot;vine&quot;</span><span class="token punctuation">:</span> #00bf8f<span class="token punctuation">,</span>\n\t<span class="token string">&quot;vkontakte&quot;</span><span class="token punctuation">:</span> #45668e<span class="token punctuation">,</span>\n\t<span class="token string">&quot;youtube&quot;</span><span class="token punctuation">:</span> #bb0000<span class="token punctuation">,</span>\n\t<span class="token string">&quot;wordpress&quot;</span><span class="token punctuation">:</span> #21759b<span class="token punctuation">,</span>\n<span class="token punctuation">)</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span> <span class="token comment">//</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h2 id="default-colorset"><a class="header-anchor" href="#default-colorset">#</a> Default colorset</h2><p>These are the colors set by default in Henris. All colors can be easily overwritten as you can read above.</p><h2 id="contra"><a class="header-anchor" href="#contra">#</a> Contra</h2><h3 id="the-function-2"><a class="header-anchor" href="#the-function-2">#</a> The function</h3><p>Contra returns the opposite color of a given value.</p><p>For instance, you create a list with colors. The background will get the colors of the list and the text will get the color which suits best.</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token selector">.element </span><span class="token punctuation">{</span>\n\t<span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$color-name</span>, <span class="token variable">$color-value</span> in <span class="token variable">$colors</span> </span><span class="token punctuation">{</span>\n\t\t&amp;--#<span class="token punctuation">{</span><span class="token function">to-lower-case</span><span class="token punctuation">(</span><span class="token variable">$color-name</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-value</span><span class="token punctuation">;</span>\n\t\t\t<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">contra</span><span class="token punctuation">(</span><span class="token variable">$color-value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<table><thead><tr><th>Argument</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>$value</code></td><td></td><td>The input color to be checked for lightness</td></tr><tr><td><code>$opacity</code></td><td><code>1</code></td><td>Returned opacity of the color</td></tr><tr><td><code>$colors</code></td><td><code>null</code></td><td>A map with a alternate black and white color can be given</td></tr><tr><td><code>$contrast</code></td><td><code>57.5</code></td><td>Contrast used to determine whether black or white should be passed back.</td></tr></tbody></table><h3 id="colors"><a class="header-anchor" href="#colors">#</a> $colors</h3><p>If you want to return an alternate black or white color (the black and white defined in the $colors are default) you can pass a list with colors.</p>\x3c!--beforebegin--\x3e<div class="language-scss extra-class">\x3c!--afterbegin--\x3e<pre class="language-scss"><code><span class="token selector">.element </span><span class="token punctuation">{</span>\n\t<span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$color-name</span>, <span class="token variable">$color-value</span> in <span class="token variable">$colors</span> </span><span class="token punctuation">{</span>\n\t\t&amp;--#<span class="token punctuation">{</span><span class="token function">to-lower-case</span><span class="token punctuation">(</span><span class="token variable">$color-name</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token variable">$color-value</span><span class="token punctuation">;</span>\n\t\t\t<span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">contra</span><span class="token punctuation">(</span><span class="token variable">$color-value</span><span class="token punctuation">,</span> 1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e</div>');o.render=function(a,t){return s(),n("div",null,[e])};export default o;export{t as __pageData};
